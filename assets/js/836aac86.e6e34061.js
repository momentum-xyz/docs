"use strict";(self.webpackChunkmomentum=self.webpackChunkmomentum||[]).push([[380],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),h=o,f=u["".concat(c,".").concat(h)]||u[h]||m[h]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},18:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Momentum software stack",s={unversionedId:"arch/software-stack",id:"arch/software-stack",title:"Momentum software stack",description:"High level overview of the different parts of the momentum application.",source:"@site/docs/arch/software-stack.md",sourceDirName:"arch",slug:"/arch/software-stack",permalink:"/arch/software-stack",draft:!1,editUrl:"https://github.com/momentum-xyz/docs/docs/arch/software-stack.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Under the hood",permalink:"/category/under-the-hood"},next:{title:"Third party services",permalink:"/arch/3th-party-deps"}},c={},l=[{value:"Frontend",id:"frontend",level:2},{value:"Backend",id:"backend",level:2}],p={toc:l};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"momentum-software-stack"},"Momentum software stack"),(0,o.kt)("p",null,"High level overview of the different parts of the momentum application."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt_text",src:r(3031).Z,title:"image_tooltip",width:"788",height:"676"})),(0,o.kt)("p",null,"Momentum is a web application accessible by any modern web browser."),(0,o.kt)("h2",{id:"frontend"},"Frontend"),(0,o.kt)("p",null,"The web interface consists of two main parts: a 2D interface layer that sits on top of a 3D canvas. The 2D interface is built with the ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"React framework")," - which is a commonly used, open source, framework for web applications. The 3D interface uses the",(0,o.kt)("a",{parentName:"p",href:"https://unity.com/"}," Unity engine"),", a well known cross platform, proprietary game engine."),(0,o.kt)("p",null,"These communicate with backend services running on some hosting environment somewhere on the internet."),(0,o.kt)("h2",{id:"backend"},"Backend"),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"API")," provides a service to retrieve \u2018bulk\u2019 data, mainly used by the 2D interface to get information about the world which the user is currently in. This is served in a common, open format (the OpenAPI specification)."),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"controller")," provides a service for real time updates of data. Any changes to the world are \u2018pushed\u2019 to all the clients/users. This is mainly used by the 3D interface to show changes in a world, as well as to keep all user positions updated. This uses a custom protocol, using a websocket connection, to efficiently transfer data."),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"media manager")," serves \u2018large\u2019 files to the browsers, like images, textures and music."),(0,o.kt)("p",null,"Authentication (logging in) is done through the ",(0,o.kt)("em",{parentName:"p"},"identity providers")," (currently guest and polkadot web3 wallet)."),(0,o.kt)("p",null,"The \u2018outward\u2019 facing services like the Controller and the API themself communicate with internal services. The ",(0,o.kt)("em",{parentName:"p"},"harvester")," and ",(0,o.kt)("em",{parentName:"p"},"token-monitor")," get data from blockchain networks and provide these for use by the other services. The harvester provides general data for specific blockchains, like real time updates of blocks. The token-monitor monitors specific tokens/NFTs/smart contracts for use as authorization in the world."))}m.isMDXComponent=!0},3031:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/momentum-stack-42647dd45e55bd1184e60a5e6b0770c2.svg"}}]);